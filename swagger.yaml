openapi: 3.0.0
info:
    title: Argent Bank API - Documentation
    description: API pour gérer les transactions bancaires de manière sécurisée
    version: '1.0.0'
    termsOfService: 'http://swagger.io/terms/'
servers:
    - url: http://localhost:3001/api/v1
paths:
    /user/login:
        post:
            tags:
                - User Module
            summary: Login
            description: API for user login
            requestBody:
                description: 'User credentials for login'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Login'
            responses:
                '200':
                    description: OK - Login Successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '500':
                    $ref: '#/components/responses/InternalServerError'
    /user/signup:
        post:
            tags:
                - User Module
            summary: Signup
            description: API for user signup
            requestBody:
                description: 'User details for signup'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                '200':
                    description: OK - Signup Successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '500':
                    $ref: '#/components/responses/InternalServerError'
    /user/profile:
        post:
            security:
                - jwt: []
            tags:
                - User Module
            summary: User Profile API
            description: API for fetching a user profile
            responses:
                '200':
                    description: OK - User profile retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '500':
                    $ref: '#/components/responses/InternalServerError'
        put:
            security:
                - jwt: []
            tags:
                - User Module
            summary: User Profile API
            description: API for updating a user profile
            requestBody:
                description: 'Updated user profile data'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserProfile'
            responses:
                '200':
                    description: OK - User profile updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '500':
                    $ref: '#/components/responses/InternalServerError'
    /user/accounts:
        get:
            security:
                - jwt: []
            tags:
                - User Accounts
            summary: User Accounts API
            description: API for retrieving user accounts
            responses:
                '200':
                    description: OK - Accounts data successfully retrieved
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Account'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '500':
                    $ref: '#/components/responses/InternalServerError'
    /user/accounts/{accountId}:
        get:
            security:
                - jwt: []
            tags:
                - User Accounts
            summary: User Account API
            description: API for retrieving user account by ID
            parameters:
                - in: path
                  name: accountId
                  required: true
                  description: The ID of the account to retrieve
                  schema:
                      type: string
            responses:
                '200':
                    description: OK - Account data successfully retrieved
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Account'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '500':
                    $ref: '#/components/responses/InternalServerError'
    /user/accounts/{accountId}/transactions:
        get:
            security:
                - jwt: []
            tags:
                - User Transactions
            summary: User Transactions API
            description: API for retrieving transactions for a user account
            parameters:
                - in: path
                  name: accountId
                  required: true
                  description: The ID of the account
                  schema:
                      type: string
            responses:
                '200':
                    description: OK - Transactions data successfully retrieved
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Transaction'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '500':
                    $ref: '#/components/responses/InternalServerError'
    /user/accounts/{accountId}/transactions/{transactionId}:
        get:
            security:
                - jwt: []
            tags:
                - User Transactions
            summary: User Transaction API
            description: API for retrieving a user transaction by ID
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      type: string
                - in: path
                  name: transactionId
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK - Transaction data successfully retrieved
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Transaction'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '500':
                    $ref: '#/components/responses/InternalServerError'
        put:
            security:
                - jwt: []
            tags:
                - User Transactions
            summary: Update Transaction API
            description: API for updating a user transaction
            parameters:
                - in: path
                  name: accountId
                  required: true
                  schema:
                      type: string
                - in: path
                  name: transactionId
                  required: true
                  schema:
                      type: string
            requestBody:
                description: 'Updated transaction data'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TransactionsCategoryOrNote'
            responses:
                '200':
                    description: OK - Transaction category successfully changed
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Transaction'
                '401':
                    $ref: '#/components/responses/Unauthorized'
                '403':
                    $ref: '#/components/responses/Forbidden'
                '404':
                    $ref: '#/components/responses/NotFound'
                '500':
                    $ref: '#/components/responses/InternalServerError'
components:
    securitySchemes:
        jwt:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        User:
            properties:
                email:
                    type: string
                    description: User email
                password:
                    type: string
                    description: User password
                firstName:
                    type: string
                    description: User first name
                lastName:
                    type: string
                    description: User last name
        Login:
            properties:
                email:
                    type: string
                    description: User email
                password:
                    type: string
                    description: User password
        ApiResponse:
            type: object
            properties:
                status:
                    type: integer
                message:
                    type: string
                body:
                    type: object
                    properties:
                        id:
                            type: string
                        email:
                            type: string
        LoginResponse:
            type: object
            properties:
                token:
                    type: string
        UserProfile:
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
        Account:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                amount:
                    type: number
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Transaction'
        Transaction:
            type: object
            properties:
                id:
                    type: string
                date:
                    type: string
                description:
                    type: string
                amount:
                    type: number
                type:
                    type: string
                category:
                    type: string
                notes:
                    type: string
        TransactionsCategoryOrNote:
            type: object
            properties:
                category:
                    type: string
                note:
                    type: string
    responses:
        Unauthorized:
            description: Unauthorized - Access token is missing or invalid
        BadRequest:
            description: Bad Request - Invalid Fields
        Forbidden:
            description: Forbidden - User does not have permission to access this resource
        NotFound:
            description: Not Found - The requested resource was not found
        InternalServerError:
            description: Internal Server Error
